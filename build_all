#! /usr/bin/env bash
#
#  script to build gems for all relevant platforms:
#  - MRI et al (standard gem)
#  - windows (x86-mingw32 and x64-mingw32)
#  - jruby
#
#  here's what I recommend for building all the gems:
#
#  set up a rake-compiler-dev-box as described here:
#      https://github.com/tjschuck/rake-compiler-dev-box
#  It is prepared with all the necessary build tools and environments.
#
#  or alternatively do:
#   1. Setup a ubuntu 12.04+ machine
#   2. install rvm, and install 1.9.3, 2.0.0 and jruby.
#   3. `sudo apt-get install mingw32 gcc-mingw-w64-i686 gcc-mingw-w64-x86-64`
#
#  as you build, you may run into these problems:
#
#  - if you're using Virtualbox shared directories, you'll get a mingw
#    "Protocol error" at linktime. Boo! Either use NFS or a
#    locally-checked-out repository.
#
#  - on ubuntus 11 and later, you may have issues with building
#    rake-compiler's rubies against openssl v2. Just comment the lines
#    out from ossl_ssl.c and you'll be fine.
#
#  - you may have issues with Pathname conversion to String in
#    bundler. Add this to the offending bundler file:
#
#      class Pathname
#        def to_str
#          to_s
#        end
#      end
#
#  - you may also have to hack rubygems.rb to eliminate a reference to
#    RUBY_ENGINE (just comment it out)
#

HOST=

# Load RVM into a shell session *as a function*
if [[ -s "$HOME/.rvm/scripts/rvm" ]] ; then
    source "$HOME/.rvm/scripts/rvm"
elif [[ -s "/usr/local/rvm/scripts/rvm" ]] ; then
    source "/usr/local/rvm/scripts/rvm"
else
    echo "ERROR: An RVM installation was not found.\n"
fi

function rvm_use {
    current_ruby=$1
    rvm use "${1}@nokogiri" --create || rvm -v
}

set -o errexit

# initialize
rvm_use 2.0.0
gem install bundler
bundle install --quiet --local || bundle install
rm -rf tmp pkg
bundle exec rake clean

# holding pen
rm -rf gems
mkdir -p gems

# windows
# Build 1.9.3
rake-compiler cross-ruby VERSION=1.9.3-p448 HOST=i586-mingw32msvc

# Now build Ruby 2.0.0 too
rake-compiler cross-ruby VERSION=2.0.0-p247 HOST=i686-w64-mingw32 debugflags="-g"

# And the cherry of the cake: x64 Ruby
rake-compiler cross-ruby VERSION=2.0.0-p247 HOST=x86_64-w64-mingw32 debugflags="-g"

bundle exec rake gem:windows
cp -v pkg/nokogiri*{x86,x64}-mingw32*.gem gems

# MRI
bundle exec rake clean
bundle exec rake gem
cp -v pkg/nokogiri*.gem gems # should only be one at this point in the script

# jruby
rvm_use jruby
bundle install --quiet --local || bundle install
bundle exec rake clean clobber
rvm_use 2.0.0
bundle exec rake generate
rvm_use jruby
bundle exec rake gem
cp -v pkg/nokogiri*java.gem gems
