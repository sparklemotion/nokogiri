% require "common_prelude.rb"

resource_types:
<%= erbify_file "common_resource_types.yml" -%>


resources:
<%= erbify_file "common_resources.yml" -%>
  - name: nokogiri
    type: git
    icon: "github"
    source:
      uri: https://github.com/sparklemotion/nokogiri/
      branch: master
      ignore_paths: <%= $git_resource_ignore_paths %>


anchors:
<%= erbify_file "common_anchors.yml" -%>


jobs:
  - name: cruby-on-vanilla-ubuntu
    public: true
    on_failure: { in_parallel: [*notify_failure_to_irc, *notify_failure_to_gitter] }
    plan:
      - get: ci
      - get: nokogiri
        trigger: true
      - task: rubocop
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: "flavorjones/nokogiri-test", tag: bionic}
          inputs:
            - name: ci
            - name: nokogiri
          run:
            path: ci/concourse/tasks/rake-test/rubocop.sh
      - task: rake-test
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: "flavorjones/nokogiri-test", tag: bionic}
          inputs:
            - name: ci
            - name: nokogiri
          params:
            TEST_WITH_SYSTEM_LIBRARIES: t
          run:
            path: ci/concourse/tasks/rake-test/run.sh
      - task: rake-test-i386
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: "flavorjones/nokogiri-test", tag: bionic32}
          inputs:
            - name: ci
            - name: nokogiri
          params:
            NOKOGIRI_USE_SYSTEM_LIBRARIES: t
          run:
            path: ci/concourse/tasks/rake-test/run.sh


  <% RUBIES[:mri].each do |ruby_version| %>
  - name: cruby-<%= ruby_version %>
    public: true
    <% if Concourse.production_rubies.include?(ruby_version) %>
    on_failure: { in_parallel: [*notify_failure_to_irc, *notify_failure_to_gitter] }
    <% end %>
    plan:
      - get: ci
      - get: nokogiri
        trigger: true
        passed: ["cruby-on-vanilla-ubuntu"]
      - task: rake-test-system-libraries
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: "flavorjones/nokogiri-test", tag: "mri-<%= ruby_version %>"}
          inputs:
            - name: ci
            - name: nokogiri
          params:
            TEST_WITH_SYSTEM_LIBRARIES: t
            <% if ruby_version == Concourse.production_rubies.last %>
            CC_TEST_REPORTER_ID: ((code_climate_reporter_id_nokogiri))
            GIT_BRANCH: master
            <% end %>
          run:
            path: ci/concourse/tasks/rake-test/run.sh
      - task: rake-test-vendored-libraries
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: "flavorjones/nokogiri-test", tag: "mri-<%= ruby_version %>"}
          inputs:
            - name: ci
            - name: nokogiri
          run:
            path: ci/concourse/tasks/rake-test/run.sh
      - task: rake-test-valgrind
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: "flavorjones/nokogiri-test", tag: "mri-<%= ruby_version %>"}
          inputs:
            - name: ci
            - name: nokogiri
          params:
            TEST_WITH_VALGRIND: t
          run:
            path: ci/concourse/tasks/rake-test/run.sh
  <% end %>


  <% RUBIES[:jruby].each_with_index do |jruby_version, j| %>
  - name: jruby-<%= jruby_version %>
    public: true
    on_failure: { in_parallel: [*notify_failure_to_irc, *notify_failure_to_gitter] }
    plan:
      - get: ci
      - get: nokogiri
        trigger: true
        passed: ["cruby-on-vanilla-ubuntu"]
      - task: rake-test
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: "flavorjones/nokogiri-test", tag: "jruby-<%= jruby_version %>"}
          inputs:
            - name: ci
            - name: nokogiri
          run:
            path: ci/concourse/tasks/rake-test/run.sh
  <% end %>


  <% RUBIES[:truffle].each_with_index do |truffle_version, j| %>
  - name: truffle-<%= truffle_version %>
    public: true
#    on_failure: { in_parallel: [*notify_failure_to_irc, *notify_failure_to_gitter] }
    plan:
      - get: ci
      - get: nokogiri
        trigger: true
        passed: ["cruby-on-vanilla-ubuntu"]
      - task: rake-test
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: "flavorjones/nokogiri-test", tag: "truffle-<%= truffle_version %>"}
          inputs:
            - name: ci
            - name: nokogiri
          run:
            path: ci/concourse/tasks/rake-test/run.sh
  <% end %>


  - name: cruby-on-musl
    public: true
    on_failure: { in_parallel: [*notify_failure_to_irc, *notify_failure_to_gitter] }
    plan:
      - get: ci
      - get: nokogiri
        trigger: true
        passed:
          <% Concourse.production_rubies.each do |ruby_version| %>
          - cruby-<%= ruby_version %>
          <% end %>
      - task: rake-test-system-libraries
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: "flavorjones/nokogiri-test", tag: "alpine"}
          inputs:
            - name: ci
            - name: nokogiri
          params:
            TEST_WITH_SYSTEM_LIBRARIES: t
          run:
            path: ci/concourse/tasks/rake-test/run.sh
      - task: rake-test-valgrind
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: "flavorjones/nokogiri-test", tag: "alpine"}
          inputs:
            - name: ci
            - name: nokogiri
          params:
            TEST_WITH_VALGRIND: t
          run:
            path: ci/concourse/tasks/rake-test/run.sh


  - name: cruby-with-libxmlruby
    public: true
    on_failure: { in_parallel: [*notify_failure_to_irc, *notify_failure_to_gitter] }
    plan:
      - get: ci
      - get: nokogiri
        trigger: true
        passed:
          <% Concourse.production_rubies.each do |ruby_version| %>
          - cruby-<%= ruby_version %>
          <% end %>
      - task: rake-test-system-libraries
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: "flavorjones/nokogiri-test", tag: "mri-<%= Concourse.production_rubies.last %>"}
          inputs:
            - name: ci
            - name: nokogiri
          params:
            BUNDLE_GEMFILE: "Gemfile-libxml-ruby"
            TEST_WITH_SYSTEM_LIBRARIES: t
          run:
            path: ci/concourse/tasks/rake-test/run.sh
      - task: rake-test-valgrind
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: "flavorjones/nokogiri-test", tag: "mri-<%= Concourse.production_rubies.last %>"}
          inputs:
            - name: ci
            - name: nokogiri
          params:
            BUNDLE_GEMFILE: "Gemfile-libxml-ruby"
            TEST_WITH_VALGRIND: t
          run:
            path: ci/concourse/tasks/rake-test/run.sh


  - name: cruby-gem-test
    public: true
    on_failure: { in_parallel: [*notify_failure_to_irc, *notify_failure_to_gitter] }
    plan:
      - get: ci
      - get: nokogiri
        trigger: true
        passed:
          <% Concourse.production_rubies.each do |ruby_version| %>
          - cruby-<%= ruby_version %>
          <% end %>
      - task: build
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: "larskanis/rake-compiler-dock-mri-x86_64-linux", tag: "<%= RakeCompilerDock::IMAGE_VERSION %>"}
          inputs:
            - name: ci
            - name: nokogiri
          outputs:
            - name: gems
          run:
            path: ci/concourse/tasks/gem-test/gem-build.sh
      - in_parallel:
        - task: install-and-test
          config:
            platform: linux
            image_resource:
              type: registry-image
              source: {repository: "flavorjones/nokogiri-test", tag: "mri-<%= Concourse.production_rubies.last %>"}
            inputs:
              - name: ci
              - name: nokogiri
              - name: gems
            run:
              path: ci/concourse/tasks/gem-test/gem-install-and-test.sh
        - task: install-and-test-on-musl
          config:
            platform: linux
            image_resource:
              type: registry-image
              source: {repository: "flavorjones/nokogiri-test", tag: "alpine"}
            inputs:
              - name: ci
              - name: nokogiri
              - name: gems
            run:
              path: ci/concourse/tasks/gem-test/gem-install-and-test.sh


  - name: cruby-native-gem-test
    public: true
    on_failure: { in_parallel: [*notify_failure_to_irc, *notify_failure_to_gitter] }
    plan:
      - get: ci
      - get: nokogiri
        trigger: true
        version: every
        passed:
          <% Concourse.production_rubies.each do |ruby_version| %>
          - cruby-<%= ruby_version %>
          <% end %>
      - task: build
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: "larskanis/rake-compiler-dock-mri-x86_64-linux", tag: "<%= RakeCompilerDock::IMAGE_VERSION %>"}
          inputs:
            - name: ci
            - name: nokogiri
          outputs:
            - name: gems
          params:
            BUILD_NATIVE_GEM: t
          run:
            path: ci/concourse/tasks/gem-test/gem-build.sh
      - in_parallel:
        <% $native_ruby_versions.each do |ruby_version| %>
        - task: install-and-test-<%= ruby_version %>
          config:
            platform: linux
            image_resource:
              type: registry-image
              source: {repository: "flavorjones/nokogiri-test", tag: "mri-<%= ruby_version %>"}
            inputs:
              - name: ci
              - name: nokogiri
              - name: gems
            run:
              path: ci/concourse/tasks/gem-test/gem-install-and-test.sh
        <% end %>
        - task: install-and-test-on-musl
          config:
            platform: linux
            image_resource:
              type: registry-image
              source: {repository: "flavorjones/nokogiri-test", tag: "alpine"}
            inputs:
              - name: ci
              - name: nokogiri
              - name: gems
            run:
              path: ci/concourse/tasks/gem-test/gem-install-and-test.sh


  - name: cruby-native-gem-test-32bit
    public: true
    on_failure: *notify_failure_to_irc
    plan:
      - get: ci
      - get: nokogiri
        trigger: true
        version: every
        passed:
          <% RUBIES[:mri].each do |ruby_version| %>
          - cruby-<%= ruby_version %>
          <% end %>
      - task: build
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: "larskanis/rake-compiler-dock-mri-x86-linux", tag: "<%= RakeCompilerDock::IMAGE_VERSION %>"}
          inputs:
            - name: ci
            - name: nokogiri
          outputs:
            - name: gems
          params:
            BUILD_NATIVE_GEM: "x86-linux"
          run:
            path: ci/concourse/tasks/gem-test/gem-build.sh
      - in_parallel:
        - task: install-and-test-on-vanilla-32bit-ubuntu
          config:
            platform: linux
            image_resource:
              type: registry-image
              source: {repository: "flavorjones/nokogiri-test", tag: "bionic32"}
            inputs:
              - name: ci
              - name: nokogiri
              - name: gems
            run:
              path: ci/concourse/tasks/gem-test/gem-install-and-test.sh
        - task: install-and-test-on-32bit-musl
          config:
            platform: linux
            image_resource:
              type: registry-image
              source: {repository: "flavorjones/nokogiri-test", tag: "alpine32"}
            inputs:
              - name: ci
              - name: nokogiri
              - name: gems
            run:
              path: ci/concourse/tasks/gem-test/gem-install-and-test.sh


  - name: jruby-gem-test
    public: true
    on_failure: { in_parallel: [*notify_failure_to_irc, *notify_failure_to_gitter] }
    plan:
      - get: ci
      - get: nokogiri
        trigger: true
        passed:
          <% RUBIES[:jruby].each do |ruby_version| %>
          - jruby-<%= ruby_version %>
          <% end %>
      - task: build
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: "larskanis/rake-compiler-dock-jruby", tag: "<%= RakeCompilerDock::IMAGE_VERSION %>"}
          inputs:
            - name: ci
            - name: nokogiri
          outputs:
            - name: gems
          run:
            path: ci/concourse/tasks/gem-test/gem-build-java.sh
      - task: install-and-test
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: "flavorjones/nokogiri-test", tag: "jruby-<%= RUBIES[:jruby].last %>"}
          inputs:
            - name: ci
            - name: nokogiri
            - name: gems
          run:
            path: ci/concourse/tasks/gem-test/gem-install-and-test.sh


  - name: build-success
    public: true
    disable_manual_trigger: true
    plan:
      - get: nokogiri
        trigger: true
        version: every
        passed:
          - cruby-on-musl
          - cruby-with-libxmlruby
          - cruby-gem-test
          - cruby-native-gem-test
          - jruby-gem-test
      - put: irc
        params: {message: "($BUILD_PIPELINE_NAME/$BUILD_JOB_NAME) The build passed ($BUILD_URL)"}
      - put: gitter
        params: { status: "succeeded" }
